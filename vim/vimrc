set encoding=UTF-8

set shiftwidth=4
set tabstop=4
set expandtab
set autoindent

set smarttab

" Incremental search
set incsearch

" Line Numbering
set number
set relativenumber

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1
set scrolloff=10
set clipboard^=unnamed,unnamedplus


let mapleader = " "

" easy search access
nnoremap <leader>s /


syntax on
colorscheme monokai

" re-map the escape key for leaving insert mode
inoremap jk <ESC>
vnoremap jk <Esc>

" Makes sense: since I use this very frequently
nnoremap Ã¤ A

" Ingore Ex mode
map Q <Nop>

" Stay in visual mode when indenting
vnoremap < <gv
vnoremap > >gv

nnoremap Y yg$

" move lines up and down. 
" In normal mode or in insert mode, press Alt-j to move the current line down, 
" or press Alt-k to move the current line up.
" After visually selecting a block of lines (for example, by pressing V then
" moving the cursor down), press Alt-j to move the whole block down, or press
" Alt-k to move the block up. from here, but this uses alt which somehow was not
" working. 
" https://vim.fandom.com/wiki/Moving_lines_up_or_down

nnoremap <C-j> :m+<CR>==
nnoremap <C-k> :m-2<CR>==
inoremap <C-j> <Esc>:m+<CR>==gi
inoremap <C-k> <Esc>:m-2<CR>==gi
vnoremap <C-j> :m'>+<CR>gv=gv
vnoremap <C-k> :m-2<CR>gv=gv

" select everything
nnoremap <C-a> ggVG


" For me, Vim stopped being able to copy to the * and + registers over SSH, 
" even though :echo has('clipboard') was 1, and other X programs still worked. 
" The solution for me was to add a mapping that yanks (via a register) to xclip:
" It's a hack, and there surely must be a better way.
" But in the end, who cares really?
vnoremap <silent><Leader>y +yy <Bar> :call system('xclip', @y)<CR>

" I want to keep clipboard when pasting 
xnoremap p P

" This unsets the 'last search pattern' register by hitting return
" https://stackoverflow.com/questions/657447/vim-clear-last-search-highlighting
nnoremap <CR> :noh<CR><CR>

" Ignore ex mode 
map Q <Nop>

" Goyo
" https://github.com/junegunn/goyo.vim/wiki/Customization#ensure-q-to-quit-even-when-goyo-is-active
function! s:goyo_enter()
  let b:quitting = 0
  let b:quitting_bang = 0
  autocmd QuitPre <buffer> let b:quitting = 1
  cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!

   set noshowmode
   set noshowcmd
   " prevent horizontal scrolling
   set sidescrolloff=0 
   set scrolloff=999

endfunction

function! s:goyo_leave()
  " Quit Vim if this is the only remaining buffer
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
      qa!
    else
      qa
    endif
  endif
endfunction

autocmd! User GoyoEnter call <SID>goyo_enter()
autocmd! User GoyoLeave call <SID>goyo_leave()

"Goyo settings
let g:goyo_height= '100%'
let g:goyo_margin_top = 0
let g:goyo_margin_bottom = 0


" Start <make kitty compatible>
" Mouse support
set mouse=a
set ttymouse=sgr
set balloonevalterm
" Styled and colored underline support
let &t_AU = "\e[58:5:%dm"
let &t_8u = "\e[58:2:%lu:%lu:%lum"
let &t_Us = "\e[4:2m"
let &t_Cs = "\e[4:3m"
let &t_ds = "\e[4:4m"
let &t_Ds = "\e[4:5m"
let &t_Ce = "\e[4:0m"
" Strikethrough
let &t_Ts = "\e[9m"
let &t_Te = "\e[29m"
" Truecolor support
let &t_8f = "\e[38:2:%lu:%lu:%lum"
let &t_8b = "\e[48:2:%lu:%lu:%lum"
let &t_RF = "\e]10;?\e\\"
let &t_RB = "\e]11;?\e\\"
" Bracketed paste
let &t_BE = "\e[?2004h"
let &t_BD = "\e[?2004l"
let &t_PS = "\e[200~"
let &t_PE = "\e[201~"
" Cursor control
let &t_RC = "\e[?12$p"
let &t_SH = "\e[%d q"
let &t_RS = "\eP$q q\e\\"
let &t_SI = "\e[5 q"
let &t_SR = "\e[3 q"
let &t_EI = "\e[1 q"
let &t_VS = "\e[?12l"
" Focus tracking
let &t_fe = "\e[?1004h"
let &t_fd = "\e[?1004l"
execute "set <FocusGained>=\<Esc>[I"
execute "set <FocusLost>=\<Esc>[O"
" Window title
let &t_ST = "\e[22;2t"
let &t_RT = "\e[23;2t"

" vim hardcodes background color erase even if the terminfo file does
" not contain bce. This causes incorrect background rendering when
" using a color theme with a background color in terminals such as
" kitty that do not support background color erase.
let &t_ut=''
" End <make kitty compatible>



call plug#begin()
" The default plugin directory will be as follows:
"   - Vim (Linux/macOS): '~/.vim/plugged'

" Make sure you use single quotes
Plug 'michaeljsmith/vim-indent-object'

Plug 'junegunn/goyo.vim'

call plug#end()


" Enable Goyo automatically for Markdown
autocmd BufRead,BufNewFile *.md :Goyo
